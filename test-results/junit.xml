<?xml version="1.0" encoding="UTF-8" ?>
<testsuites name="vitest tests" tests="290" failures="27" errors="0" time="0.92728822">
    <testsuite name="tests/api/auth-verify.test.ts" timestamp="2025-09-06T17:57:52.156Z" hostname="c82ba9db4d53" tests="19" failures="0" errors="0" skipped="0" time="0.055371183">
        <testcase classname="tests/api/auth-verify.test.ts" name="/api/auth/verify - Plex Authentication Verification &gt; POST requests - Authentication verification &gt; should verify authentication successfully with valid pin" time="0.013656514">
        </testcase>
        <testcase classname="tests/api/auth-verify.test.ts" name="/api/auth/verify - Plex Authentication Verification &gt; POST requests - Authentication verification &gt; should return 400 when pin_id is missing" time="0.002179401">
        </testcase>
        <testcase classname="tests/api/auth-verify.test.ts" name="/api/auth/verify - Plex Authentication Verification &gt; POST requests - Authentication verification &gt; should return 400 when pin_code is missing" time="0.001850466">
        </testcase>
        <testcase classname="tests/api/auth-verify.test.ts" name="/api/auth/verify - Plex Authentication Verification &gt; POST requests - Authentication verification &gt; should return 400 when both pin_id and pin_code are missing" time="0.001210687">
        </testcase>
        <testcase classname="tests/api/auth-verify.test.ts" name="/api/auth/verify - Plex Authentication Verification &gt; POST requests - Authentication verification &gt; should handle empty string pins" time="0.001103766">
        </testcase>
        <testcase classname="tests/api/auth-verify.test.ts" name="/api/auth/verify - Plex Authentication Verification &gt; POST requests - Authentication verification &gt; should handle Plex TV API errors" time="0.002043489">
        </testcase>
        <testcase classname="tests/api/auth-verify.test.ts" name="/api/auth/verify - Plex Authentication Verification &gt; POST requests - Authentication verification &gt; should handle Plex TV API unauthorized error" time="0.001796236">
        </testcase>
        <testcase classname="tests/api/auth-verify.test.ts" name="/api/auth/verify - Plex Authentication Verification &gt; POST requests - Authentication verification &gt; should handle network timeout errors" time="0.00140872">
        </testcase>
        <testcase classname="tests/api/auth-verify.test.ts" name="/api/auth/verify - Plex Authentication Verification &gt; POST requests - Authentication verification &gt; should handle malformed Plex TV response" time="0.002088499">
        </testcase>
        <testcase classname="tests/api/auth-verify.test.ts" name="/api/auth/verify - Plex Authentication Verification &gt; POST requests - Authentication verification &gt; should handle settings update failure" time="0.001822795">
        </testcase>
        <testcase classname="tests/api/auth-verify.test.ts" name="/api/auth/verify - Plex Authentication Verification &gt; POST requests - Authentication verification &gt; should handle settings read failure" time="0.006026295">
        </testcase>
        <testcase classname="tests/api/auth-verify.test.ts" name="/api/auth/verify - Plex Authentication Verification &gt; POST requests - Authentication verification &gt; should handle missing environment variables" time="0.001639324">
        </testcase>
        <testcase classname="tests/api/auth-verify.test.ts" name="/api/auth/verify - Plex Authentication Verification &gt; POST requests - Authentication verification &gt; should handle empty authToken in response" time="0.001475151">
        </testcase>
        <testcase classname="tests/api/auth-verify.test.ts" name="/api/auth/verify - Plex Authentication Verification &gt; Request validation and edge cases &gt; should only accept POST requests" time="0.001816316">
        </testcase>
        <testcase classname="tests/api/auth-verify.test.ts" name="/api/auth/verify - Plex Authentication Verification &gt; Request validation and edge cases &gt; should handle very long pin values" time="0.001490741">
        </testcase>
        <testcase classname="tests/api/auth-verify.test.ts" name="/api/auth/verify - Plex Authentication Verification &gt; Request validation and edge cases &gt; should handle special characters in pins" time="0.002045309">
        </testcase>
        <testcase classname="tests/api/auth-verify.test.ts" name="/api/auth/verify - Plex Authentication Verification &gt; Request validation and edge cases &gt; should handle concurrent verification requests" time="0.002691728">
        </testcase>
        <testcase classname="tests/api/auth-verify.test.ts" name="/api/auth/verify - Plex Authentication Verification &gt; Request validation and edge cases &gt; should handle Plex TV API rate limiting" time="0.001022154">
        </testcase>
        <testcase classname="tests/api/auth-verify.test.ts" name="/api/auth/verify - Plex Authentication Verification &gt; Request validation and edge cases &gt; should preserve auth token format" time="0.001333898">
        </testcase>
    </testsuite>
    <testsuite name="tests/api/combined-music-search-config.test.ts" timestamp="2025-09-06T17:57:52.161Z" hostname="c82ba9db4d53" tests="18" failures="0" errors="0" skipped="0" time="0.111872303">
        <testcase classname="tests/api/combined-music-search-config.test.ts" name="/api/plex/music-search-config/combined - Combined Configuration Management &gt; GET requests - Fetch combined configuration &gt; should return combined text processing and search approaches configuration" time="0.025741315">
        </testcase>
        <testcase classname="tests/api/combined-music-search-config.test.ts" name="/api/plex/music-search-config/combined - Combined Configuration Management &gt; GET requests - Fetch combined configuration &gt; should handle first endpoint failure gracefully" time="0.004561535">
        </testcase>
        <testcase classname="tests/api/combined-music-search-config.test.ts" name="/api/plex/music-search-config/combined - Combined Configuration Management &gt; GET requests - Fetch combined configuration &gt; should handle second endpoint failure gracefully" time="0.00425472">
        </testcase>
        <testcase classname="tests/api/combined-music-search-config.test.ts" name="/api/plex/music-search-config/combined - Combined Configuration Management &gt; GET requests - Fetch combined configuration &gt; should handle both endpoints failure" time="0.004119878">
        </testcase>
        <testcase classname="tests/api/combined-music-search-config.test.ts" name="/api/plex/music-search-config/combined - Combined Configuration Management &gt; GET requests - Fetch combined configuration &gt; should handle network timeout errors" time="0.002714638">
        </testcase>
        <testcase classname="tests/api/combined-music-search-config.test.ts" name="/api/plex/music-search-config/combined - Combined Configuration Management &gt; GET requests - Fetch combined configuration &gt; should handle empty responses from both endpoints" time="0.003296526">
        </testcase>
        <testcase classname="tests/api/combined-music-search-config.test.ts" name="/api/plex/music-search-config/combined - Combined Configuration Management &gt; POST requests - Update combined configuration &gt; should update both configurations successfully" time="0.006775686">
        </testcase>
        <testcase classname="tests/api/combined-music-search-config.test.ts" name="/api/plex/music-search-config/combined - Combined Configuration Management &gt; POST requests - Update combined configuration &gt; should return 400 when textProcessing is missing from request body" time="0.003642861">
        </testcase>
        <testcase classname="tests/api/combined-music-search-config.test.ts" name="/api/plex/music-search-config/combined - Combined Configuration Management &gt; POST requests - Update combined configuration &gt; should return 400 when searchApproaches is missing from request body" time="0.003593401">
        </testcase>
        <testcase classname="tests/api/combined-music-search-config.test.ts" name="/api/plex/music-search-config/combined - Combined Configuration Management &gt; POST requests - Update combined configuration &gt; should return 400 when both configurations are missing" time="0.003089864">
        </testcase>
        <testcase classname="tests/api/combined-music-search-config.test.ts" name="/api/plex/music-search-config/combined - Combined Configuration Management &gt; POST requests - Update combined configuration &gt; should handle null/undefined request body" time="0.002974852">
        </testcase>
        <testcase classname="tests/api/combined-music-search-config.test.ts" name="/api/plex/music-search-config/combined - Combined Configuration Management &gt; POST requests - Update combined configuration &gt; should handle first endpoint update failure" time="0.003311356">
        </testcase>
        <testcase classname="tests/api/combined-music-search-config.test.ts" name="/api/plex/music-search-config/combined - Combined Configuration Management &gt; POST requests - Update combined configuration &gt; should handle second endpoint update failure" time="0.002512376">
        </testcase>
        <testcase classname="tests/api/combined-music-search-config.test.ts" name="/api/plex/music-search-config/combined - Combined Configuration Management &gt; POST requests - Update combined configuration &gt; should handle complex nested configuration objects" time="0.005118713">
        </testcase>
        <testcase classname="tests/api/combined-music-search-config.test.ts" name="/api/plex/music-search-config/combined - Combined Configuration Management &gt; Request validation and edge cases &gt; should return 405 for unsupported HTTP methods" time="0.004461983">
        </testcase>
        <testcase classname="tests/api/combined-music-search-config.test.ts" name="/api/plex/music-search-config/combined - Combined Configuration Management &gt; Request validation and edge cases &gt; should handle very large configuration objects" time="0.01205132">
        </testcase>
        <testcase classname="tests/api/combined-music-search-config.test.ts" name="/api/plex/music-search-config/combined - Combined Configuration Management &gt; Request validation and edge cases &gt; should handle concurrent requests to same endpoint" time="0.008235736">
        </testcase>
        <testcase classname="tests/api/combined-music-search-config.test.ts" name="/api/plex/music-search-config/combined - Combined Configuration Management &gt; Request validation and edge cases &gt; should handle partial success scenarios gracefully" time="0.002322443">
        </testcase>
    </testsuite>
    <testsuite name="tests/api/match-filters-config.test.ts" timestamp="2025-09-06T17:57:52.166Z" hostname="c82ba9db4d53" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="tests/api/match-filters-config.test.ts" name="tests/api/match-filters-config.test.ts" time="0">
            <failure message="[vitest] There was an error when mocking a module. If you are using &quot;vi.mock&quot; factory, make sure there are no top level variables inside, since this call is hoisted to top of the file. Read more: https://vitest.dev/api/vi.html#vi-mock" type="Error">
Error: [vitest] There was an error when mocking a module. If you are using &quot;vi.mock&quot; factory, make sure there are no top level variables inside, since this call is hoisted to top of the file. Read more: https://vitest.dev/api/vi.html#vi-mock
 ❯ apps/web/pages/api/plex/music-search-config/match-filters.ts:2:1

Caused by: Caused by: ReferenceError: Cannot access &apos;mockGetMatchFilters&apos; before initialization
 ❯ tests/api/match-filters-config.test.ts:29:20
 ❯ apps/web/pages/api/plex/music-search-config/match-filters.ts:2:1
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="tests/api/settings-management.test.ts" timestamp="2025-09-06T17:57:52.168Z" hostname="c82ba9db4d53" tests="30" failures="0" errors="0" skipped="0" time="0.146448257">
        <testcase classname="tests/api/settings-management.test.ts" name="/api/settings - Advanced Settings Management &gt; GET requests - Retrieve settings &gt; should return current settings when user is authenticated" time="0.013835966">
        </testcase>
        <testcase classname="tests/api/settings-management.test.ts" name="/api/settings - Advanced Settings Management &gt; GET requests - Retrieve settings &gt; should return not logged in when no token exists" time="0.001313619">
        </testcase>
        <testcase classname="tests/api/settings-management.test.ts" name="/api/settings - Advanced Settings Management &gt; GET requests - Retrieve settings &gt; should handle empty token (empty string)" time="0.010424198">
        </testcase>
        <testcase classname="tests/api/settings-management.test.ts" name="/api/settings - Advanced Settings Management &gt; GET requests - Retrieve settings &gt; should handle undefined token" time="0.001155146">
        </testcase>
        <testcase classname="tests/api/settings-management.test.ts" name="/api/settings - Advanced Settings Management &gt; GET requests - Retrieve settings &gt; should handle missing URI and ID gracefully" time="0.001002575">
        </testcase>
        <testcase classname="tests/api/settings-management.test.ts" name="/api/settings - Advanced Settings Management &gt; GET requests - Retrieve settings &gt; should handle settings read errors" time="0.001630253">
        </testcase>
        <testcase classname="tests/api/settings-management.test.ts" name="/api/settings - Advanced Settings Management &gt; GET requests - Retrieve settings &gt; should handle file permission errors" time="0.000961804">
        </testcase>
        <testcase classname="tests/api/settings-management.test.ts" name="/api/settings - Advanced Settings Management &gt; GET requests - Retrieve settings &gt; should handle corrupted settings file" time="0.001085726">
        </testcase>
        <testcase classname="tests/api/settings-management.test.ts" name="/api/settings - Advanced Settings Management &gt; POST requests - Update settings &gt; should update settings successfully with valid URI and ID" time="0.003952506">
        </testcase>
        <testcase classname="tests/api/settings-management.test.ts" name="/api/settings - Advanced Settings Management &gt; POST requests - Update settings &gt; should update only URI when ID is not provided" time="0.012516247">
        </testcase>
        <testcase classname="tests/api/settings-management.test.ts" name="/api/settings - Advanced Settings Management &gt; POST requests - Update settings &gt; should handle empty URI update request" time="0.001124536">
        </testcase>
        <testcase classname="tests/api/settings-management.test.ts" name="/api/settings - Advanced Settings Management &gt; POST requests - Update settings &gt; should skip update when no URI is provided in body" time="0.00990277">
        </testcase>
        <testcase classname="tests/api/settings-management.test.ts" name="/api/settings - Advanced Settings Management &gt; POST requests - Update settings &gt; should handle null/undefined request body" time="0.000933863">
        </testcase>
        <testcase classname="tests/api/settings-management.test.ts" name="/api/settings - Advanced Settings Management &gt; POST requests - Update settings &gt; should handle empty object request body" time="0.00143249">
        </testcase>
        <testcase classname="tests/api/settings-management.test.ts" name="/api/settings - Advanced Settings Management &gt; POST requests - Update settings &gt; should handle update settings errors" time="0.001107206">
        </testcase>
        <testcase classname="tests/api/settings-management.test.ts" name="/api/settings - Advanced Settings Management &gt; POST requests - Update settings &gt; should handle disk space errors during update" time="0.000827172">
        </testcase>
        <testcase classname="tests/api/settings-management.test.ts" name="/api/settings - Advanced Settings Management &gt; POST requests - Update settings &gt; should handle settings read error after successful update" time="0.001039245">
        </testcase>
        <testcase classname="tests/api/settings-management.test.ts" name="/api/settings - Advanced Settings Management &gt; POST requests - Update settings &gt; should handle complex URI formats" time="0.001969088">
        </testcase>
        <testcase classname="tests/api/settings-management.test.ts" name="/api/settings - Advanced Settings Management &gt; POST requests - Update settings &gt; should handle very long URI and ID values" time="0.000801821">
        </testcase>
        <testcase classname="tests/api/settings-management.test.ts" name="/api/settings - Advanced Settings Management &gt; POST requests - Update settings &gt; should handle special characters in URI and ID" time="0.02465067">
        </testcase>
        <testcase classname="tests/api/settings-management.test.ts" name="/api/settings - Advanced Settings Management &gt; Advanced edge cases and error handling &gt; should handle settings with all null values" time="0.007562387">
        </testcase>
        <testcase classname="tests/api/settings-management.test.ts" name="/api/settings - Advanced Settings Management &gt; Advanced edge cases and error handling &gt; should handle concurrent settings read requests" time="0.003358807">
        </testcase>
        <testcase classname="tests/api/settings-management.test.ts" name="/api/settings - Advanced Settings Management &gt; Advanced edge cases and error handling &gt; should handle concurrent settings update requests" time="0.006221978">
        </testcase>
        <testcase classname="tests/api/settings-management.test.ts" name="/api/settings - Advanced Settings Management &gt; Advanced edge cases and error handling &gt; should handle race condition between update and read" time="0.000792381">
        </testcase>
        <testcase classname="tests/api/settings-management.test.ts" name="/api/settings - Advanced Settings Management &gt; Advanced edge cases and error handling &gt; should handle malformed JSON-like strings in settings" time="0.000734771">
        </testcase>
        <testcase classname="tests/api/settings-management.test.ts" name="/api/settings - Advanced Settings Management &gt; Advanced edge cases and error handling &gt; should handle mixed data types in request body" time="0.001304929">
        </testcase>
        <testcase classname="tests/api/settings-management.test.ts" name="/api/settings - Advanced Settings Management &gt; Advanced edge cases and error handling &gt; should maintain settings persistence across errors" time="0.001055475">
        </testcase>
        <testcase classname="tests/api/settings-management.test.ts" name="/api/settings - Advanced Settings Management &gt; Request validation &gt; should handle unsupported HTTP methods" time="0.001359029">
        </testcase>
        <testcase classname="tests/api/settings-management.test.ts" name="/api/settings - Advanced Settings Management &gt; Request validation &gt; should handle requests with custom headers" time="0.000826792">
        </testcase>
        <testcase classname="tests/api/settings-management.test.ts" name="/api/settings - Advanced Settings Management &gt; Request validation &gt; should handle very large request payloads" time="0.000557288">
        </testcase>
    </testsuite>
    <testsuite name="tests/api/validation-endpoint.test.ts" timestamp="2025-09-06T17:57:52.175Z" hostname="c82ba9db4d53" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="tests/api/validation-endpoint.test.ts" name="tests/api/validation-endpoint.test.ts" time="0">
            <failure message="[vitest] There was an error when mocking a module. If you are using &quot;vi.mock&quot; factory, make sure there are no top level variables inside, since this call is hoisted to top of the file. Read more: https://vitest.dev/api/vi.html#vi-mock" type="Error">
Error: [vitest] There was an error when mocking a module. If you are using &quot;vi.mock&quot; factory, make sure there are no top level variables inside, since this call is hoisted to top of the file. Read more: https://vitest.dev/api/vi.html#vi-mock
 ❯ apps/web/pages/api/plex/music-search-config/validate.ts:2:1

Caused by: Caused by: ReferenceError: Cannot access &apos;mockValidateExpression&apos; before initialization
 ❯ tests/api/validation-endpoint.test.ts:29:23
 ❯ apps/web/pages/api/plex/music-search-config/validate.ts:2:1
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="tests/e2e/home.spec.ts" timestamp="2025-09-06T17:57:52.176Z" hostname="c82ba9db4d53" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="tests/e2e/home.spec.ts" name="tests/e2e/home.spec.ts" time="0">
            <failure message="Playwright Test did not expect test.describe() to be called here.
Most common reasons include:
- You are calling test.describe() in a configuration file.
- You are calling test.describe() in a file that is imported by the configuration file.
- You have two different versions of @playwright/test. This usually happens
  when one of the dependencies in your package.json depends on @playwright/test." type="Error">
Error: Playwright Test did not expect test.describe() to be called here.
Most common reasons include:
- You are calling test.describe() in a configuration file.
- You are calling test.describe() in a file that is imported by the configuration file.
- You have two different versions of @playwright/test. This usually happens
  when one of the dependencies in your package.json depends on @playwright/test.
 ❯ TestTypeImpl._currentSuite node_modules/.pnpm/playwright@1.55.0/node_modules/playwright/lib/common/testType.js:74:13
 ❯ TestTypeImpl._describe node_modules/.pnpm/playwright@1.55.0/node_modules/playwright/lib/common/testType.js:114:24
 ❯ Function.describe node_modules/.pnpm/playwright@1.55.0/node_modules/playwright/lib/transform/transform.js:275:12
 ❯ tests/e2e/home.spec.ts:3:6
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="tests/utils/matchFilters/matchFilters.test.ts" timestamp="2025-09-06T17:57:52.177Z" hostname="c82ba9db4d53" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="tests/utils/matchFilters/matchFilters.test.ts" name="tests/utils/matchFilters/matchFilters.test.ts" time="0">
            <system-out>
=== Match Filter Conversion Tests ===

Test 1: &quot;artist:match AND title:contains&quot;
UI Config: {
  &quot;rules&quot;: [
    {
      &quot;id&quot;: &quot;rule-0&quot;,
      &quot;conditions&quot;: [
        {
          &quot;id&quot;: &quot;cond-0-0&quot;,
          &quot;field&quot;: &quot;artist&quot;,
          &quot;operation&quot;: &quot;match&quot;
        },
        {
          &quot;id&quot;: &quot;cond-0-1&quot;,
          &quot;field&quot;: &quot;title&quot;,
          &quot;operation&quot;: &quot;contains&quot;
        }
      ],
      &quot;combinator&quot;: &quot;AND&quot;,
      &quot;name&quot;: &quot;Filter 1&quot;
    }
  ],
  &quot;globalCombinator&quot;: &quot;OR&quot;
}
Validation: { isValid: [33mtrue[39m, errors: [] }
Back to Expression: artist:match AND title:contains
Round-trip consistent: [33mtrue[39m
---

Test 2: &quot;artist:similarity&gt;=0.8&quot;
UI Config: {
  &quot;rules&quot;: [
    {
      &quot;id&quot;: &quot;rule-0&quot;,
      &quot;conditions&quot;: [
        {
          &quot;id&quot;: &quot;cond-0-0&quot;,
          &quot;field&quot;: &quot;artist&quot;,
          &quot;operation&quot;: &quot;similarity&quot;,
          &quot;threshold&quot;: 0.8
        }
      ],
      &quot;combinator&quot;: &quot;AND&quot;,
      &quot;name&quot;: &quot;Filter 1&quot;
    }
  ],
  &quot;globalCombinator&quot;: &quot;OR&quot;
}
Validation: { isValid: [33mtrue[39m, errors: [] }
Back to Expression: artist:similarity&gt;=0.8
Round-trip consistent: [33mtrue[39m
---

Test 3: &quot;artist:match OR title:match&quot;
UI Config: {
  &quot;rules&quot;: [
    {
      &quot;id&quot;: &quot;rule-0&quot;,
      &quot;conditions&quot;: [
        {
          &quot;id&quot;: &quot;cond-0-0&quot;,
          &quot;field&quot;: &quot;artist&quot;,
          &quot;operation&quot;: &quot;match&quot;
        }
      ],
      &quot;combinator&quot;: &quot;AND&quot;,
      &quot;name&quot;: &quot;Filter 1&quot;
    },
    {
      &quot;id&quot;: &quot;rule-1&quot;,
      &quot;conditions&quot;: [
        {
          &quot;id&quot;: &quot;cond-1-0&quot;,
          &quot;field&quot;: &quot;title&quot;,
          &quot;operation&quot;: &quot;match&quot;
        }
      ],
      &quot;combinator&quot;: &quot;AND&quot;,
      &quot;name&quot;: &quot;Filter 2&quot;
    }
  ],
  &quot;globalCombinator&quot;: &quot;OR&quot;
}
Validation: { isValid: [33mtrue[39m, errors: [] }
Back to Expression: artist:match OR title:match
Round-trip consistent: [33mtrue[39m
---

Test 4: &quot;artist:match AND title:contains OR album:similarity&gt;=0.9&quot;
UI Config: {
  &quot;rules&quot;: [
    {
      &quot;id&quot;: &quot;rule-0&quot;,
      &quot;conditions&quot;: [
        {
          &quot;id&quot;: &quot;cond-0-0&quot;,
          &quot;field&quot;: &quot;artist&quot;,
          &quot;operation&quot;: &quot;match&quot;
        },
        {
          &quot;id&quot;: &quot;cond-0-1&quot;,
          &quot;field&quot;: &quot;title&quot;,
          &quot;operation&quot;: &quot;contains&quot;
        }
      ],
      &quot;combinator&quot;: &quot;AND&quot;,
      &quot;name&quot;: &quot;Filter 1&quot;
    },
    {
      &quot;id&quot;: &quot;rule-1&quot;,
      &quot;conditions&quot;: [
        {
          &quot;id&quot;: &quot;cond-1-0&quot;,
          &quot;field&quot;: &quot;album&quot;,
          &quot;operation&quot;: &quot;similarity&quot;,
          &quot;threshold&quot;: 0.9
        }
      ],
      &quot;combinator&quot;: &quot;AND&quot;,
      &quot;name&quot;: &quot;Filter 2&quot;
    }
  ],
  &quot;globalCombinator&quot;: &quot;OR&quot;
}
Validation: { isValid: [33mtrue[39m, errors: [] }
Back to Expression: artist:match AND title:contains OR album:similarity&gt;=0.9
Round-trip consistent: [33mtrue[39m
---

Test 5: &quot;&quot;
UI Config: {
  &quot;rules&quot;: [],
  &quot;globalCombinator&quot;: &quot;OR&quot;
}
Validation: { isValid: [33mfalse[39m, errors: [ [32m&apos;At least one rule is required&apos;[39m ] }
Back to Expression: 
Round-trip consistent: [33mtrue[39m
---


            </system-out>
            <failure message="No test suite found in file /var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/tests/utils/matchFilters/matchFilters.test.ts" type="Error">
Error: No test suite found in file /var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/tests/utils/matchFilters/matchFilters.test.ts
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="packages/http-client/src/__tests__/AxiosRequest.test.ts" timestamp="2025-09-06T17:57:52.179Z" hostname="c82ba9db4d53" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="packages/http-client/src/__tests__/AxiosRequest.test.ts" name="src/__tests__/AxiosRequest.test.ts" time="0">
            <failure message="expect is not defined" type="ReferenceError">
ReferenceError: expect is not defined
 ❯ ../../node_modules/.pnpm/@testing-library+jest-dom@6.8.0/node_modules/@testing-library/jest-dom/dist/index.mjs:9:1
 ❯ ../../tests/setup/vitest.setup.ts:1:1
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="packages/http-client/src/__tests__/methods/axiosDelete.test.ts" timestamp="2025-09-06T17:57:52.180Z" hostname="c82ba9db4d53" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="packages/http-client/src/__tests__/methods/axiosDelete.test.ts" name="src/__tests__/methods/axiosDelete.test.ts" time="0">
            <failure message="expect is not defined" type="ReferenceError">
ReferenceError: expect is not defined
 ❯ ../../node_modules/.pnpm/@testing-library+jest-dom@6.8.0/node_modules/@testing-library/jest-dom/dist/index.mjs:9:1
 ❯ ../../tests/setup/vitest.setup.ts:1:1
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="packages/http-client/src/__tests__/methods/axiosGet.test.ts" timestamp="2025-09-06T17:57:52.182Z" hostname="c82ba9db4d53" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="packages/http-client/src/__tests__/methods/axiosGet.test.ts" name="src/__tests__/methods/axiosGet.test.ts" time="0">
            <failure message="expect is not defined" type="ReferenceError">
ReferenceError: expect is not defined
 ❯ ../../node_modules/.pnpm/@testing-library+jest-dom@6.8.0/node_modules/@testing-library/jest-dom/dist/index.mjs:9:1
 ❯ ../../tests/setup/vitest.setup.ts:1:1
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="packages/http-client/src/__tests__/methods/axiosPost.test.ts" timestamp="2025-09-06T17:57:52.183Z" hostname="c82ba9db4d53" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="packages/http-client/src/__tests__/methods/axiosPost.test.ts" name="src/__tests__/methods/axiosPost.test.ts" time="0">
            <failure message="expect is not defined" type="ReferenceError">
ReferenceError: expect is not defined
 ❯ ../../node_modules/.pnpm/@testing-library+jest-dom@6.8.0/node_modules/@testing-library/jest-dom/dist/index.mjs:9:1
 ❯ ../../tests/setup/vitest.setup.ts:1:1
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="packages/http-client/src/__tests__/methods/axiosPut.test.ts" timestamp="2025-09-06T17:57:52.184Z" hostname="c82ba9db4d53" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="packages/http-client/src/__tests__/methods/axiosPut.test.ts" name="src/__tests__/methods/axiosPut.test.ts" time="0">
            <failure message="expect is not defined" type="ReferenceError">
ReferenceError: expect is not defined
 ❯ ../../node_modules/.pnpm/@testing-library+jest-dom@6.8.0/node_modules/@testing-library/jest-dom/dist/index.mjs:9:1
 ❯ ../../tests/setup/vitest.setup.ts:1:1
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="packages/shared-utils/src/__tests__/array/filterUnique.test.ts" timestamp="2025-09-06T17:57:52.186Z" hostname="c82ba9db4d53" tests="14" failures="0" errors="0" skipped="0" time="0.02263205">
        <testcase classname="packages/shared-utils/src/__tests__/array/filterUnique.test.ts" name="filterUnique &gt; basic functionality &gt; should filter out duplicate strings" time="0.003858494">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/array/filterUnique.test.ts" name="filterUnique &gt; basic functionality &gt; should filter out duplicate numbers" time="0.000563428">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/array/filterUnique.test.ts" name="filterUnique &gt; basic functionality &gt; should handle empty array" time="0.000626768">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/array/filterUnique.test.ts" name="filterUnique &gt; basic functionality &gt; should handle array with no duplicates" time="0.000673579">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/array/filterUnique.test.ts" name="filterUnique &gt; edge cases &gt; should handle single element array" time="0.000468117">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/array/filterUnique.test.ts" name="filterUnique &gt; edge cases &gt; should handle array with all same elements" time="0.000394346">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/array/filterUnique.test.ts" name="filterUnique &gt; edge cases &gt; should handle null and undefined values" time="0.000433446">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/array/filterUnique.test.ts" name="filterUnique &gt; edge cases &gt; should handle mixed data types" time="0.000607828">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/array/filterUnique.test.ts" name="filterUnique &gt; object references &gt; should compare object references, not values" time="0.002235362">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/array/filterUnique.test.ts" name="filterUnique &gt; object references &gt; should handle array of objects with same reference" time="0.000924173">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/array/filterUnique.test.ts" name="filterUnique &gt; performance considerations &gt; should handle large arrays efficiently" time="0.005447357">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/array/filterUnique.test.ts" name="filterUnique &gt; performance considerations &gt; should maintain original order of first occurrences" time="0.000660209">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/array/filterUnique.test.ts" name="filterUnique &gt; function signature verification &gt; should be compatible with Array.prototype.filter" time="0.000398406">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/array/filterUnique.test.ts" name="filterUnique &gt; function signature verification &gt; should receive correct parameters from filter" time="0.001504942">
        </testcase>
    </testsuite>
    <testsuite name="packages/shared-utils/src/__tests__/utils/getAPIUrl.test.ts" timestamp="2025-09-06T17:57:52.189Z" hostname="c82ba9db4d53" tests="34" failures="0" errors="0" skipped="0" time="0.03805611">
        <testcase classname="packages/shared-utils/src/__tests__/utils/getAPIUrl.test.ts" name="getAPIUrl &gt; basic functionality &gt; should construct API URL with protocol, host and path" time="0.003145815">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/utils/getAPIUrl.test.ts" name="getAPIUrl &gt; basic functionality &gt; should work with HTTPS URLs" time="0.000498817">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/utils/getAPIUrl.test.ts" name="getAPIUrl &gt; basic functionality &gt; should handle paths with query parameters" time="0.000571798">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/utils/getAPIUrl.test.ts" name="getAPIUrl &gt; basic functionality &gt; should handle root path" time="0.000567278">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/utils/getAPIUrl.test.ts" name="getAPIUrl &gt; port validation &gt; should throw error when port is missing" time="0.001960978">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/utils/getAPIUrl.test.ts" name="getAPIUrl &gt; port validation &gt; should throw error when URL has no port in hostname only format" time="0.000628349">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/utils/getAPIUrl.test.ts" name="getAPIUrl &gt; port validation &gt; should work with explicit port numbers" time="0.000863442">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/utils/getAPIUrl.test.ts" name="getAPIUrl &gt; port validation &gt; should work with default HTTPS port" time="0.000559028">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/utils/getAPIUrl.test.ts" name="getAPIUrl &gt; port validation &gt; should work with default HTTP port" time="0.003475419">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/utils/getAPIUrl.test.ts" name="getAPIUrl &gt; URL parsing &gt; should handle complex hostnames" time="0.000726921">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/utils/getAPIUrl.test.ts" name="getAPIUrl &gt; URL parsing &gt; should preserve protocol from original URL" time="0.000317294">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/utils/getAPIUrl.test.ts" name="getAPIUrl &gt; URL parsing &gt; should handle URLs with existing paths that get replaced" time="0.000353175">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/utils/getAPIUrl.test.ts" name="getAPIUrl &gt; URL parsing &gt; should handle URLs with query parameters that get replaced" time="0.000280774">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/utils/getAPIUrl.test.ts" name="getAPIUrl &gt; URL parsing &gt; should handle URLs with fragments that get replaced" time="0.000645039">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/utils/getAPIUrl.test.ts" name="getAPIUrl &gt; path handling &gt; should handle paths starting with slash" time="0.000352775">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/utils/getAPIUrl.test.ts" name="getAPIUrl &gt; path handling &gt; should handle paths not starting with slash" time="0.000375035">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/utils/getAPIUrl.test.ts" name="getAPIUrl &gt; path handling &gt; should handle empty paths" time="0.000282434">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/utils/getAPIUrl.test.ts" name="getAPIUrl &gt; path handling &gt; should handle complex paths" time="0.000737761">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/utils/getAPIUrl.test.ts" name="getAPIUrl &gt; path handling &gt; should handle paths with special characters" time="0.000484737">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/utils/getAPIUrl.test.ts" name="getAPIUrl &gt; error handling &gt; should throw specific error message about Roon extension" time="0.000572458">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/utils/getAPIUrl.test.ts" name="getAPIUrl &gt; error handling &gt; should handle malformed URLs gracefully" time="0.000476557">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/utils/getAPIUrl.test.ts" name="getAPIUrl &gt; error handling &gt; should handle invalid protocols" time="0.000644439">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/utils/getAPIUrl.test.ts" name="getAPIUrl &gt; real-world usage patterns &gt; should work with typical Plex server configurations" time="0.001195297">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/utils/getAPIUrl.test.ts" name="getAPIUrl &gt; real-world usage patterns &gt; should work with Plex API endpoints" time="0.000840252">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/utils/getAPIUrl.test.ts" name="getAPIUrl &gt; real-world usage patterns &gt; should handle dynamic port assignments" time="0.000631499">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/utils/getAPIUrl.test.ts" name="getAPIUrl &gt; URL component preservation &gt; should preserve protocol exactly" time="0.000365765">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/utils/getAPIUrl.test.ts" name="getAPIUrl &gt; URL component preservation &gt; should preserve hostname exactly" time="0.00071695">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/utils/getAPIUrl.test.ts" name="getAPIUrl &gt; URL component preservation &gt; should preserve port exactly" time="0.00064307">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/utils/getAPIUrl.test.ts" name="getAPIUrl &gt; edge cases &gt; should handle very long paths" time="0.000385055">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/utils/getAPIUrl.test.ts" name="getAPIUrl &gt; edge cases &gt; should handle paths with Unicode characters" time="0.001668173">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/utils/getAPIUrl.test.ts" name="getAPIUrl &gt; edge cases &gt; should handle IPv6 addresses with ports" time="0.000365035">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/utils/getAPIUrl.test.ts" name="getAPIUrl &gt; edge cases &gt; should handle unusual but valid port numbers" time="0.000567048">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/utils/getAPIUrl.test.ts" name="getAPIUrl &gt; performance &gt; should handle many URL constructions efficiently" time="0.007154102">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/utils/getAPIUrl.test.ts" name="getAPIUrl &gt; performance &gt; should handle complex URLs efficiently" time="0.000463507">
        </testcase>
    </testsuite>
    <testsuite name="packages/shared-utils/src/__tests__/validation/validateExpression.test.ts" timestamp="2025-09-06T17:57:52.196Z" hostname="c82ba9db4d53" tests="39" failures="0" errors="0" skipped="0" time="0.120001992">
        <testcase classname="packages/shared-utils/src/__tests__/validation/validateExpression.test.ts" name="validateExpression &gt; basic validation &gt; should return valid: false for empty expression" time="0.00490735">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/validation/validateExpression.test.ts" name="validateExpression &gt; basic validation &gt; should return valid: false for whitespace-only expression" time="0.000932643">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/validation/validateExpression.test.ts" name="validateExpression &gt; basic validation &gt; should return valid: true for single valid field" time="0.002899261">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/validation/validateExpression.test.ts" name="validateExpression &gt; basic validation &gt; should return valid: true for field with operation" time="0.001544572">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/validation/validateExpression.test.ts" name="validateExpression &gt; field validation &gt; should accept all valid fields as standalone" time="0.002816489">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/validation/validateExpression.test.ts" name="validateExpression &gt; field validation &gt; should accept all valid fields with operations" time="0.002599477">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/validation/validateExpression.test.ts" name="validateExpression &gt; field validation &gt; should reject invalid field names" time="0.001661484">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/validation/validateExpression.test.ts" name="validateExpression &gt; field validation &gt; should reject multiple invalid fields" time="0.000886853">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/validation/validateExpression.test.ts" name="validateExpression &gt; field validation &gt; should handle mixed valid and invalid fields" time="0.000733651">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/validation/validateExpression.test.ts" name="validateExpression &gt; operation validation &gt; should accept all valid operations" time="0.001968717">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/validation/validateExpression.test.ts" name="validateExpression &gt; operation validation &gt; should accept similarity operations with valid thresholds" time="0.002436654">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/validation/validateExpression.test.ts" name="validateExpression &gt; operation validation &gt; should reject invalid operations" time="0.00208824">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/validation/validateExpression.test.ts" name="validateExpression &gt; operation validation &gt; should reject similarity operations with invalid thresholds" time="0.00140832">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/validation/validateExpression.test.ts" name="validateExpression &gt; operation validation &gt; should handle missing similarity threshold" time="0.000895633">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/validation/validateExpression.test.ts" name="validateExpression &gt; boolean operator validation &gt; should accept AND operator" time="0.000719751">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/validation/validateExpression.test.ts" name="validateExpression &gt; boolean operator validation &gt; should accept OR operator" time="0.00068495">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/validation/validateExpression.test.ts" name="validateExpression &gt; boolean operator validation &gt; should reject invalid boolean operators" time="0.00065493">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/validation/validateExpression.test.ts" name="validateExpression &gt; boolean operator validation &gt; should handle multiple boolean operators" time="0.000512517">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/validation/validateExpression.test.ts" name="validateExpression &gt; boolean operator validation &gt; should be case sensitive for operators" time="0.000409075">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/validation/validateExpression.test.ts" name="validateExpression &gt; expression structure validation &gt; should validate balanced expressions" time="0.008348938">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/validation/validateExpression.test.ts" name="validateExpression &gt; expression structure validation &gt; should reject unbalanced expressions" time="0.000836652">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/validation/validateExpression.test.ts" name="validateExpression &gt; expression structure validation &gt; should handle complex valid expressions" time="0.000967714">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/validation/validateExpression.test.ts" name="validateExpression &gt; mixed field formats &gt; should handle expressions with both field:operation and standalone fields" time="0.000455106">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/validation/validateExpression.test.ts" name="validateExpression &gt; mixed field formats &gt; should handle multiple standalone fields" time="0.000486567">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/validation/validateExpression.test.ts" name="validateExpression &gt; mixed field formats &gt; should handle all standalone fields" time="0.000454706">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/validation/validateExpression.test.ts" name="validateExpression &gt; error handling &gt; should handle parsing errors gracefully" time="0.000476226">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/validation/validateExpression.test.ts" name="validateExpression &gt; error handling &gt; should return ValidationResult interface" time="0.000803781">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/validation/validateExpression.test.ts" name="validateExpression &gt; error handling &gt; should handle very long expressions" time="0.000742241">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/validation/validateExpression.test.ts" name="validateExpression &gt; whitespace handling &gt; should handle expressions with extra whitespace" time="0.000535768">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/validation/validateExpression.test.ts" name="validateExpression &gt; whitespace handling &gt; should handle expressions with no spaces around operators" time="0.000453416">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/validation/validateExpression.test.ts" name="validateExpression &gt; whitespace handling &gt; should handle tabs and other whitespace characters" time="0.000471146">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/validation/validateExpression.test.ts" name="validateExpression &gt; edge cases &gt; should handle single character inputs" time="0.000509877">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/validation/validateExpression.test.ts" name="validateExpression &gt; edge cases &gt; should handle expressions with only operators" time="0.000425546">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/validation/validateExpression.test.ts" name="validateExpression &gt; edge cases &gt; should handle expressions with only colons" time="0.000390106">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/validation/validateExpression.test.ts" name="validateExpression &gt; edge cases &gt; should handle unicode characters" time="0.001001824">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/validation/validateExpression.test.ts" name="validateExpression &gt; performance &gt; should handle moderately complex expressions efficiently" time="0.000631369">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/validation/validateExpression.test.ts" name="validateExpression &gt; performance &gt; should handle many validation calls efficiently" time="0.052717147">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/validation/validateExpression.test.ts" name="validateExpression &gt; comprehensive integration &gt; should validate real-world music search expressions" time="0.004806418">
        </testcase>
        <testcase classname="packages/shared-utils/src/__tests__/validation/validateExpression.test.ts" name="validateExpression &gt; comprehensive integration &gt; should provide helpful error messages" time="0.000465647">
        </testcase>
    </testsuite>
    <testsuite name="packages/music-search/src/__tests__/utils/compareTitles.test.ts" timestamp="2025-09-06T17:57:52.207Z" hostname="c82ba9db4d53" tests="32" failures="0" errors="0" skipped="0" time="0.314209685">
        <testcase classname="packages/music-search/src/__tests__/utils/compareTitles.test.ts" name="compareTitles &gt; basic functionality &gt; should return default result for undefined inputs" time="0.005000891">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/compareTitles.test.ts" name="compareTitles &gt; basic functionality &gt; should return default result when first parameter is undefined" time="0.00065916">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/compareTitles.test.ts" name="compareTitles &gt; basic functionality &gt; should return default result when second parameter is undefined" time="0.000843452">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/compareTitles.test.ts" name="compareTitles &gt; basic functionality &gt; should return default result for empty strings" time="0.000654339">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/compareTitles.test.ts" name="compareTitles &gt; exact matching &gt; should detect exact matches (case insensitive)" time="0.033440054">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/compareTitles.test.ts" name="compareTitles &gt; exact matching &gt; should detect exact matches with different cases" time="0.000750921">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/compareTitles.test.ts" name="compareTitles &gt; exact matching &gt; should not match different strings" time="0.000753401">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/compareTitles.test.ts" name="compareTitles &gt; exact matching &gt; should handle punctuation in matching" time="0.000504157">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/compareTitles.test.ts" name="compareTitles &gt; contains functionality &gt; one-way contains (default) &gt; should detect when second string contains in first (normalized)" time="0.000724431">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/compareTitles.test.ts" name="compareTitles &gt; contains functionality &gt; one-way contains (default) &gt; should not detect when first string contains in second" time="0.000543538">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/compareTitles.test.ts" name="compareTitles &gt; contains functionality &gt; one-way contains (default) &gt; should handle case insensitive contains" time="0.000428426">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/compareTitles.test.ts" name="compareTitles &gt; contains functionality &gt; two-way contains &gt; should detect contains in both directions when twoWayContain is true" time="0.000810001">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/compareTitles.test.ts" name="compareTitles &gt; contains functionality &gt; two-way contains &gt; should work with two-way contains for equal strings" time="0.000616889">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/compareTitles.test.ts" name="compareTitles &gt; contains functionality &gt; short title exclusion &gt; should not use contains for titles shorter than 5 characters" time="0.0007575">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/compareTitles.test.ts" name="compareTitles &gt; contains functionality &gt; short title exclusion &gt; should not use contains when second title is shorter than 5 characters" time="0.000502607">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/compareTitles.test.ts" name="compareTitles &gt; contains functionality &gt; short title exclusion &gt; should use contains when both titles are 5+ characters" time="0.000559668">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/compareTitles.test.ts" name="compareTitles &gt; contains functionality &gt; short title exclusion &gt; should handle exactly 5 character strings" time="0.000412306">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/compareTitles.test.ts" name="compareTitles &gt; similarity scoring &gt; should return similarity score between 0 and 1" time="0.000600708">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/compareTitles.test.ts" name="compareTitles &gt; similarity scoring &gt; should return higher similarity for similar strings" time="0.000482087">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/compareTitles.test.ts" name="compareTitles &gt; similarity scoring &gt; should return perfect similarity for identical strings" time="0.000526727">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/compareTitles.test.ts" name="compareTitles &gt; createSearchString integration &gt; should call createSearchString for contains logic" time="0.002127731">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/compareTitles.test.ts" name="compareTitles &gt; createSearchString integration &gt; should call createSearchString twice for two-way contains" time="0.000497467">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/compareTitles.test.ts" name="compareTitles &gt; createSearchString integration &gt; should not call createSearchString for short titles" time="0.000661849">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/compareTitles.test.ts" name="compareTitles &gt; real-world examples &gt; should handle music track comparisons" time="0.001651153">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/compareTitles.test.ts" name="compareTitles &gt; real-world examples &gt; should handle partial track matches" time="0.000819542">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/compareTitles.test.ts" name="compareTitles &gt; real-world examples &gt; should handle remixes and versions" time="0.0007291">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/compareTitles.test.ts" name="compareTitles &gt; real-world examples &gt; should handle abbreviations" time="0.00076211">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/compareTitles.test.ts" name="compareTitles &gt; edge cases &gt; should handle very long titles" time="0.001906037">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/compareTitles.test.ts" name="compareTitles &gt; edge cases &gt; should handle special characters" time="0.000425986">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/compareTitles.test.ts" name="compareTitles &gt; edge cases &gt; should handle unicode characters" time="0.000389646">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/compareTitles.test.ts" name="compareTitles &gt; edge cases &gt; should handle whitespace variations" time="0.000375585">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/compareTitles.test.ts" name="compareTitles &gt; performance &gt; should handle many comparisons efficiently" time="0.247195934">
        </testcase>
    </testsuite>
    <testsuite name="packages/music-search/src/__tests__/utils/createSearchString.test.ts" timestamp="2025-09-06T17:57:52.216Z" hostname="c82ba9db4d53" tests="24" failures="0" errors="0" skipped="0" time="0.050469144">
        <testcase classname="packages/music-search/src/__tests__/utils/createSearchString.test.ts" name="createSearchString &gt; basic functionality &gt; should convert string to lowercase" time="0.012588819">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/createSearchString.test.ts" name="createSearchString &gt; basic functionality &gt; should trim whitespace" time="0.000822832">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/createSearchString.test.ts" name="createSearchString &gt; basic functionality &gt; should handle empty string" time="0.00071458">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/createSearchString.test.ts" name="createSearchString &gt; basic functionality &gt; should handle whitespace-only string" time="0.000578658">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/createSearchString.test.ts" name="createSearchString &gt; diacritic normalization &gt; a variants &gt; should normalize à, á, â, ã, ä, å to a" time="0.000917483">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/createSearchString.test.ts" name="createSearchString &gt; diacritic normalization &gt; e variants &gt; should normalize è, é, ê, ë to e" time="0.00070966">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/createSearchString.test.ts" name="createSearchString &gt; diacritic normalization &gt; i variants &gt; should normalize ì, í, î, ï to i" time="0.000475276">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/createSearchString.test.ts" name="createSearchString &gt; diacritic normalization &gt; o variants &gt; should normalize ò, ó, ô, õ, ö to o" time="0.000473397">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/createSearchString.test.ts" name="createSearchString &gt; diacritic normalization &gt; u variants &gt; should normalize ù, ú, û, ü to u" time="0.000633549">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/createSearchString.test.ts" name="createSearchString &gt; diacritic normalization &gt; y variants &gt; should normalize ý, ÿ to y" time="0.000410715">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/createSearchString.test.ts" name="createSearchString &gt; diacritic normalization &gt; special characters &gt; should normalize æ to ae" time="0.000422586">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/createSearchString.test.ts" name="createSearchString &gt; diacritic normalization &gt; special characters &gt; should normalize œ to oe" time="0.000839012">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/createSearchString.test.ts" name="createSearchString &gt; diacritic normalization &gt; special characters &gt; should normalize ç to c" time="0.000455047">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/createSearchString.test.ts" name="createSearchString &gt; diacritic normalization &gt; special characters &gt; should normalize ñ to n" time="0.006796206">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/createSearchString.test.ts" name="createSearchString &gt; real-world examples &gt; should normalize music artist names" time="0.00070677">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/createSearchString.test.ts" name="createSearchString &gt; real-world examples &gt; should normalize song titles" time="0.000653809">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/createSearchString.test.ts" name="createSearchString &gt; real-world examples &gt; should handle mixed content" time="0.000405275">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/createSearchString.test.ts" name="createSearchString &gt; edge cases &gt; should handle strings with only diacritics" time="0.000286754">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/createSearchString.test.ts" name="createSearchString &gt; edge cases &gt; should handle mixed case with diacritics" time="0.000351175">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/createSearchString.test.ts" name="createSearchString &gt; edge cases &gt; should handle numbers and special characters" time="0.000437836">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/createSearchString.test.ts" name="createSearchString &gt; edge cases &gt; should handle very long strings" time="0.000650189">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/createSearchString.test.ts" name="createSearchString &gt; performance &gt; should handle large strings efficiently" time="0.001895217">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/createSearchString.test.ts" name="createSearchString &gt; consistency &gt; should be idempotent" time="0.000377446">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/createSearchString.test.ts" name="createSearchString &gt; consistency &gt; should handle null/undefined gracefully" time="0.000320305">
        </testcase>
    </testsuite>
    <testsuite name="packages/music-search/src/__tests__/utils/filterOutWords.test.ts" timestamp="2025-09-06T17:57:52.222Z" hostname="c82ba9db4d53" tests="39" failures="0" errors="0" skipped="0" time="0.043677858">
        <testcase classname="packages/music-search/src/__tests__/utils/filterOutWords.test.ts" name="filterOutWords &gt; basic functionality &gt; should convert input to lowercase" time="0.003685622">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/filterOutWords.test.ts" name="filterOutWords &gt; basic functionality &gt; should trim whitespace from result" time="0.000586758">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/filterOutWords.test.ts" name="filterOutWords &gt; basic functionality &gt; should handle empty string" time="0.00071122">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/filterOutWords.test.ts" name="filterOutWords &gt; basic functionality &gt; should handle whitespace-only string" time="0.00074748">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/filterOutWords.test.ts" name="filterOutWords &gt; word filtering &gt; should filter out words when filtered=true" time="0.003727353">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/filterOutWords.test.ts" name="filterOutWords &gt; word filtering &gt; should not filter out words when filtered=false" time="0.000811761">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/filterOutWords.test.ts" name="filterOutWords &gt; word filtering &gt; should filter multiple words" time="0.003013992">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/filterOutWords.test.ts" name="filterOutWords &gt; word filtering &gt; should handle case insensitive filtering" time="0.00070659">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/filterOutWords.test.ts" name="filterOutWords &gt; word filtering &gt; should handle words not in filter list" time="0.005357026">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/filterOutWords.test.ts" name="filterOutWords &gt; quote removal &gt; should remove quotes when removeQuotes=true" time="0.00075035">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/filterOutWords.test.ts" name="filterOutWords &gt; quote removal &gt; should not remove quotes when removeQuotes=false" time="0.000395495">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/filterOutWords.test.ts" name="filterOutWords &gt; quote removal &gt; should remove various quote types" time="0.000392755">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/filterOutWords.test.ts" name="filterOutWords &gt; quote removal &gt; should handle multiple quote characters" time="0.000496047">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/filterOutWords.test.ts" name="filterOutWords &gt; separator cut-off &gt; should cut off at separators when cutOffSeparators=true" time="0.000803431">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/filterOutWords.test.ts" name="filterOutWords &gt; separator cut-off &gt; should not cut off when cutOffSeparators=false" time="0.000437746">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/filterOutWords.test.ts" name="filterOutWords &gt; separator cut-off &gt; should cut off at last occurrence of separator" time="0.000390735">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/filterOutWords.test.ts" name="filterOutWords &gt; separator cut-off &gt; should handle multiple separator types" time="0.000663949">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/filterOutWords.test.ts" name="filterOutWords &gt; separator cut-off &gt; should not cut off if separator not found" time="0.000509447">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/filterOutWords.test.ts" name="filterOutWords &gt; empty brackets removal &gt; should remove empty brackets" time="0.000413156">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/filterOutWords.test.ts" name="filterOutWords &gt; empty brackets removal &gt; should remove multiple empty brackets" time="0.000382416">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/filterOutWords.test.ts" name="filterOutWords &gt; empty brackets removal &gt; should not remove non-empty brackets" time="0.000352495">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/filterOutWords.test.ts" name="filterOutWords &gt; trailing dash removal &gt; should remove trailing dashes" time="0.000464666">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/filterOutWords.test.ts" name="filterOutWords &gt; trailing dash removal &gt; should remove multiple trailing dashes" time="0.000381955">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/filterOutWords.test.ts" name="filterOutWords &gt; trailing dash removal &gt; should not remove dashes from short strings" time="0.000397906">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/filterOutWords.test.ts" name="filterOutWords &gt; trailing dash removal &gt; should handle starting dashes" time="0.000351215">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/filterOutWords.test.ts" name="filterOutWords &gt; trailing dash removal &gt; should not affect middle dashes" time="0.000333304">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/filterOutWords.test.ts" name="filterOutWords &gt; combined operations &gt; should apply all filters when all flags are true" time="0.000377215">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/filterOutWords.test.ts" name="filterOutWords &gt; combined operations &gt; should handle complex real-world examples" time="0.000340354">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/filterOutWords.test.ts" name="filterOutWords &gt; combined operations &gt; should preserve order of operations" time="0.000447606">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/filterOutWords.test.ts" name="filterOutWords &gt; edge cases &gt; should handle strings with only filtered content" time="0.000339115">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/filterOutWords.test.ts" name="filterOutWords &gt; edge cases &gt; should handle repeated separators" time="0.000288934">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/filterOutWords.test.ts" name="filterOutWords &gt; edge cases &gt; should handle mixed whitespace" time="0.000273534">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/filterOutWords.test.ts" name="filterOutWords &gt; edge cases &gt; should handle very long strings" time="0.00074671">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/filterOutWords.test.ts" name="filterOutWords &gt; edge cases &gt; should handle strings with only separators" time="0.000336545">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/filterOutWords.test.ts" name="filterOutWords &gt; configuration dependency &gt; should call getCurrentMusicSearchConfig" time="0.00071401">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/filterOutWords.test.ts" name="filterOutWords &gt; configuration dependency &gt; should use configuration values" time="0.003757543">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/filterOutWords.test.ts" name="filterOutWords &gt; configuration dependency &gt; should handle empty configuration arrays" time="0.000368025">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/filterOutWords.test.ts" name="filterOutWords &gt; performance &gt; should handle many filter operations efficiently" time="0.000504657">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/filterOutWords.test.ts" name="filterOutWords &gt; performance &gt; should handle large filter arrays efficiently" time="0.001856506">
        </testcase>
    </testsuite>
    <testsuite name="packages/music-search/src/__tests__/utils/removeFeaturing.test.ts" timestamp="2025-09-06T17:57:52.229Z" hostname="c82ba9db4d53" tests="14" failures="0" errors="0" skipped="0" time="0.024549638">
        <testcase classname="packages/music-search/src/__tests__/utils/removeFeaturing.test.ts" name="removeFeaturing &gt; happy path &gt; returns clean song titles" time="0.003028553">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/removeFeaturing.test.ts" name="removeFeaturing &gt; happy path &gt; removes feat markers" time="0.00067988">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/removeFeaturing.test.ts" name="removeFeaturing &gt; happy path &gt; removes parentheses content" time="0.000577378">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/removeFeaturing.test.ts" name="removeFeaturing &gt; happy path &gt; prioritizes first occurrence" time="0.000551238">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/removeFeaturing.test.ts" name="removeFeaturing &gt; edge cases &gt; handles boundary inputs: &quot;&quot; -&gt; &quot;&quot;" time="0.000372245">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/removeFeaturing.test.ts" name="removeFeaturing &gt; edge cases &gt; handles boundary inputs: &quot;(&quot; -&gt; &quot;&quot;" time="0.000275114">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/removeFeaturing.test.ts" name="removeFeaturing &gt; edge cases &gt; handles boundary inputs: &quot;feat&quot; -&gt; &quot;&quot;" time="0.000405805">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/removeFeaturing.test.ts" name="removeFeaturing &gt; edge cases &gt; handles boundary inputs: &quot;a&quot; -&gt; &quot;a&quot;" time="0.000275714">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/removeFeaturing.test.ts" name="removeFeaturing &gt; edge cases &gt; removes from first &quot;feat&quot; occurrence" time="0.000547868">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/removeFeaturing.test.ts" name="removeFeaturing &gt; edge cases &gt; handles case sensitivity" time="0.010450038">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/removeFeaturing.test.ts" name="removeFeaturing &gt; edge cases &gt; ignores closing parenthesis only" time="0.000433177">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/removeFeaturing.test.ts" name="removeFeaturing &gt; error handling &gt; handles null and undefined inputs" time="0.002230252">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/removeFeaturing.test.ts" name="removeFeaturing &gt; real-world examples &gt; processes common patterns: &quot;Despacito feat. Justin Bieber&quot;" time="0.000334174">
        </testcase>
        <testcase classname="packages/music-search/src/__tests__/utils/removeFeaturing.test.ts" name="removeFeaturing &gt; real-world examples &gt; processes common patterns: &quot;Bohemian Rhapsody (Live Aid 1985)&quot;" time="0.000653489">
        </testcase>
    </testsuite>
    <testsuite name="apps/web/__tests__/api/index.test.ts" timestamp="2025-09-06T17:57:52.239Z" hostname="c82ba9db4d53" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="apps/web/__tests__/api/index.test.ts" name="__tests__/api/index.test.ts" time="0">
            <failure message="Cannot find module &apos;/var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts&apos;" type="Error">
Error: Cannot find module &apos;/var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts&apos;
⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: &apos;ERR_MODULE_NOT_FOUND&apos; }
Caused by: Caused by: Error: Failed to load url /var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts (resolved id: /var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts). Does the file exist?
 ❯ loadAndTransform ../../node_modules/.pnpm/vite@7.1.4_@types+node@20.19.11_sass@1.90.0/node_modules/vite/dist/node/chunks/dep-C6pp_iVS.js:26400:33
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="apps/web/__tests__/api/plex-connection.test.ts" timestamp="2025-09-06T17:57:52.241Z" hostname="c82ba9db4d53" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="apps/web/__tests__/api/plex-connection.test.ts" name="__tests__/api/plex-connection.test.ts" time="0">
            <failure message="Cannot find module &apos;/var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts&apos;" type="Error">
Error: Cannot find module &apos;/var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts&apos;
⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: &apos;ERR_MODULE_NOT_FOUND&apos; }
Caused by: Error: Failed to load url /var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts (resolved id: /var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts). Does the file exist?
 ❯ loadAndTransform ../../node_modules/.pnpm/vite@7.1.4_@types+node@20.19.11_sass@1.90.0/node_modules/vite/dist/node/chunks/dep-C6pp_iVS.js:26400:33
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="apps/web/__tests__/api/plex-tracks.test.ts" timestamp="2025-09-06T17:57:52.243Z" hostname="c82ba9db4d53" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="apps/web/__tests__/api/plex-tracks.test.ts" name="__tests__/api/plex-tracks.test.ts" time="0">
            <failure message="Cannot find module &apos;/var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts&apos;" type="Error">
Error: Cannot find module &apos;/var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts&apos;
⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: &apos;ERR_MODULE_NOT_FOUND&apos; }
Caused by: Error: Failed to load url /var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts (resolved id: /var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts). Does the file exist?
 ❯ loadAndTransform ../../node_modules/.pnpm/vite@7.1.4_@types+node@20.19.11_sass@1.90.0/node_modules/vite/dist/node/chunks/dep-C6pp_iVS.js:26400:33
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="apps/web/__tests__/api/settings-create.test.ts" timestamp="2025-09-06T17:57:52.244Z" hostname="c82ba9db4d53" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="apps/web/__tests__/api/settings-create.test.ts" name="__tests__/api/settings-create.test.ts" time="0">
            <failure message="Cannot find module &apos;/var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts&apos;" type="Error">
Error: Cannot find module &apos;/var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts&apos;
⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: &apos;ERR_MODULE_NOT_FOUND&apos; }
Caused by: Error: Failed to load url /var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts (resolved id: /var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts). Does the file exist?
 ❯ loadAndTransform ../../node_modules/.pnpm/vite@7.1.4_@types+node@20.19.11_sass@1.90.0/node_modules/vite/dist/node/chunks/dep-C6pp_iVS.js:26400:33
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="apps/web/__tests__/api/settings.test.ts" timestamp="2025-09-06T17:57:52.246Z" hostname="c82ba9db4d53" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="apps/web/__tests__/api/settings.test.ts" name="__tests__/api/settings.test.ts" time="0">
            <failure message="Cannot find module &apos;/var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts&apos;" type="Error">
Error: Cannot find module &apos;/var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts&apos;
⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: &apos;ERR_MODULE_NOT_FOUND&apos; }
Caused by: Error: Failed to load url /var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts (resolved id: /var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts). Does the file exist?
 ❯ loadAndTransform ../../node_modules/.pnpm/vite@7.1.4_@types+node@20.19.11_sass@1.90.0/node_modules/vite/dist/node/chunks/dep-C6pp_iVS.js:26400:33
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="apps/web/__tests__/api/spotify-auth.test.ts" timestamp="2025-09-06T17:57:52.247Z" hostname="c82ba9db4d53" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="apps/web/__tests__/api/spotify-auth.test.ts" name="__tests__/api/spotify-auth.test.ts" time="0">
            <failure message="Cannot find module &apos;/var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts&apos;" type="Error">
Error: Cannot find module &apos;/var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts&apos;
⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: &apos;ERR_MODULE_NOT_FOUND&apos; }
Caused by: Error: Failed to load url /var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts (resolved id: /var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts). Does the file exist?
 ❯ loadAndTransform ../../node_modules/.pnpm/vite@7.1.4_@types+node@20.19.11_sass@1.90.0/node_modules/vite/dist/node/chunks/dep-C6pp_iVS.js:26400:33
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="apps/web/__tests__/api/spotify-data-playlists.test.ts" timestamp="2025-09-06T17:57:52.249Z" hostname="c82ba9db4d53" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="apps/web/__tests__/api/spotify-data-playlists.test.ts" name="__tests__/api/spotify-data-playlists.test.ts" time="0">
            <failure message="Cannot find module &apos;/var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts&apos;" type="Error">
Error: Cannot find module &apos;/var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts&apos;
⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: &apos;ERR_MODULE_NOT_FOUND&apos; }
Caused by: Error: Failed to load url /var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts (resolved id: /var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts). Does the file exist?
 ❯ loadAndTransform ../../node_modules/.pnpm/vite@7.1.4_@types+node@20.19.11_sass@1.90.0/node_modules/vite/dist/node/chunks/dep-C6pp_iVS.js:26400:33
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="apps/web/__tests__/api/spotify-data.test.ts" timestamp="2025-09-06T17:57:52.250Z" hostname="c82ba9db4d53" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="apps/web/__tests__/api/spotify-data.test.ts" name="__tests__/api/spotify-data.test.ts" time="0">
            <failure message="Cannot find module &apos;/var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts&apos;" type="Error">
Error: Cannot find module &apos;/var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts&apos;
⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: &apos;ERR_MODULE_NOT_FOUND&apos; }
Caused by: Error: Failed to load url /var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts (resolved id: /var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts). Does the file exist?
 ❯ loadAndTransform ../../node_modules/.pnpm/vite@7.1.4_@types+node@20.19.11_sass@1.90.0/node_modules/vite/dist/node/chunks/dep-C6pp_iVS.js:26400:33
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="apps/web/__tests__/api/sync-operations.test.ts" timestamp="2025-09-06T17:57:52.252Z" hostname="c82ba9db4d53" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="apps/web/__tests__/api/sync-operations.test.ts" name="__tests__/api/sync-operations.test.ts" time="0">
            <failure message="Cannot find module &apos;/var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts&apos;" type="Error">
Error: Cannot find module &apos;/var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts&apos;
⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: &apos;ERR_MODULE_NOT_FOUND&apos; }
Caused by: Error: Failed to load url /var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts (resolved id: /var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts). Does the file exist?
 ❯ loadAndTransform ../../node_modules/.pnpm/vite@7.1.4_@types+node@20.19.11_sass@1.90.0/node_modules/vite/dist/node/chunks/dep-C6pp_iVS.js:26400:33
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="apps/web/__tests__/hooks/useDualModeEditor.test.ts" timestamp="2025-09-06T17:57:52.253Z" hostname="c82ba9db4d53" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="apps/web/__tests__/hooks/useDualModeEditor.test.ts" name="__tests__/hooks/useDualModeEditor.test.ts" time="0">
            <failure message="Cannot find module &apos;/var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts&apos;" type="Error">
Error: Cannot find module &apos;/var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts&apos;
⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: &apos;ERR_MODULE_NOT_FOUND&apos; }
Caused by: Error: Failed to load url /var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts (resolved id: /var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts). Does the file exist?
 ❯ loadAndTransform ../../node_modules/.pnpm/vite@7.1.4_@types+node@20.19.11_sass@1.90.0/node_modules/vite/dist/node/chunks/dep-C6pp_iVS.js:26400:33
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="apps/web/__tests__/pages/index.test.tsx" timestamp="2025-09-06T17:57:52.254Z" hostname="c82ba9db4d53" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="apps/web/__tests__/pages/index.test.tsx" name="__tests__/pages/index.test.tsx" time="0">
            <failure message="Cannot find module &apos;/var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts&apos;" type="Error">
Error: Cannot find module &apos;/var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts&apos;
⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: &apos;ERR_MODULE_NOT_FOUND&apos; }
Caused by: Error: Failed to load url /var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts (resolved id: /var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts). Does the file exist?
 ❯ loadAndTransform ../../node_modules/.pnpm/vite@7.1.4_@types+node@20.19.11_sass@1.90.0/node_modules/vite/dist/node/chunks/dep-C6pp_iVS.js:26400:33
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="apps/web/__tests__/components/ConfirmProvider/ConfirmProvider.test.tsx" timestamp="2025-09-06T17:57:52.255Z" hostname="c82ba9db4d53" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="apps/web/__tests__/components/ConfirmProvider/ConfirmProvider.test.tsx" name="__tests__/components/ConfirmProvider/ConfirmProvider.test.tsx" time="0">
            <failure message="Cannot find module &apos;/var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts&apos;" type="Error">
Error: Cannot find module &apos;/var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts&apos;
⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: &apos;ERR_MODULE_NOT_FOUND&apos; }
Caused by: Error: Failed to load url /var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts (resolved id: /var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts). Does the file exist?
 ❯ loadAndTransform ../../node_modules/.pnpm/vite@7.1.4_@types+node@20.19.11_sass@1.90.0/node_modules/vite/dist/node/chunks/dep-C6pp_iVS.js:26400:33
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="apps/web/__tests__/components/CustomPaper/CustomPaper.test.tsx" timestamp="2025-09-06T17:57:52.256Z" hostname="c82ba9db4d53" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="apps/web/__tests__/components/CustomPaper/CustomPaper.test.tsx" name="__tests__/components/CustomPaper/CustomPaper.test.tsx" time="0">
            <failure message="Cannot find module &apos;/var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts&apos;" type="Error">
Error: Cannot find module &apos;/var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts&apos;
⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: &apos;ERR_MODULE_NOT_FOUND&apos; }
Caused by: Error: Failed to load url /var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts (resolved id: /var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts). Does the file exist?
 ❯ loadAndTransform ../../node_modules/.pnpm/vite@7.1.4_@types+node@20.19.11_sass@1.90.0/node_modules/vite/dist/node/chunks/dep-C6pp_iVS.js:26400:33
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="apps/web/__tests__/components/EditorHeader/EditorHeader.test.tsx" timestamp="2025-09-06T17:57:52.257Z" hostname="c82ba9db4d53" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="apps/web/__tests__/components/EditorHeader/EditorHeader.test.tsx" name="__tests__/components/EditorHeader/EditorHeader.test.tsx" time="0">
            <failure message="Cannot find module &apos;/var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts&apos;" type="Error">
Error: Cannot find module &apos;/var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts&apos;
⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: &apos;ERR_MODULE_NOT_FOUND&apos; }
Caused by: Error: Failed to load url /var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts (resolved id: /var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts). Does the file exist?
 ❯ loadAndTransform ../../node_modules/.pnpm/vite@7.1.4_@types+node@20.19.11_sass@1.90.0/node_modules/vite/dist/node/chunks/dep-C6pp_iVS.js:26400:33
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="apps/web/__tests__/components/EnhancedMonacoJsonEditor/EnhancedMonacoJsonEditor.test.tsx" timestamp="2025-09-06T17:57:52.258Z" hostname="c82ba9db4d53" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="apps/web/__tests__/components/EnhancedMonacoJsonEditor/EnhancedMonacoJsonEditor.test.tsx" name="__tests__/components/EnhancedMonacoJsonEditor/EnhancedMonacoJsonEditor.test.tsx" time="0">
            <failure message="Cannot find module &apos;/var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts&apos;" type="Error">
Error: Cannot find module &apos;/var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts&apos;
⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: &apos;ERR_MODULE_NOT_FOUND&apos; }
Caused by: Error: Failed to load url /var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts (resolved id: /var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts). Does the file exist?
 ❯ loadAndTransform ../../node_modules/.pnpm/vite@7.1.4_@types+node@20.19.11_sass@1.90.0/node_modules/vite/dist/node/chunks/dep-C6pp_iVS.js:26400:33
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="apps/web/__tests__/components/ErrorProvider/ErrorProvider.test.tsx" timestamp="2025-09-06T17:57:52.259Z" hostname="c82ba9db4d53" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="apps/web/__tests__/components/ErrorProvider/ErrorProvider.test.tsx" name="__tests__/components/ErrorProvider/ErrorProvider.test.tsx" time="0">
            <failure message="Cannot find module &apos;/var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts&apos;" type="Error">
Error: Cannot find module &apos;/var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts&apos;
⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: &apos;ERR_MODULE_NOT_FOUND&apos; }
Caused by: Error: Failed to load url /var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts (resolved id: /var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts). Does the file exist?
 ❯ loadAndTransform ../../node_modules/.pnpm/vite@7.1.4_@types+node@20.19.11_sass@1.90.0/node_modules/vite/dist/node/chunks/dep-C6pp_iVS.js:26400:33
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="apps/web/__tests__/components/MatchFilterEditor/MatchFilterEditor.test.tsx" timestamp="2025-09-06T17:57:52.260Z" hostname="c82ba9db4d53" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="apps/web/__tests__/components/MatchFilterEditor/MatchFilterEditor.test.tsx" name="__tests__/components/MatchFilterEditor/MatchFilterEditor.test.tsx" time="0">
            <failure message="Cannot find module &apos;/var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts&apos;" type="Error">
Error: Cannot find module &apos;/var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts&apos;
⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: &apos;ERR_MODULE_NOT_FOUND&apos; }
Caused by: Error: Failed to load url /var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts (resolved id: /var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts). Does the file exist?
 ❯ loadAndTransform ../../node_modules/.pnpm/vite@7.1.4_@types+node@20.19.11_sass@1.90.0/node_modules/vite/dist/node/chunks/dep-C6pp_iVS.js:26400:33
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="apps/web/__tests__/components/PillEditor/PillEditor.test.tsx" timestamp="2025-09-06T17:57:52.261Z" hostname="c82ba9db4d53" tests="1" failures="1" errors="0" skipped="0" time="0">
        <testcase classname="apps/web/__tests__/components/PillEditor/PillEditor.test.tsx" name="__tests__/components/PillEditor/PillEditor.test.tsx" time="0">
            <failure message="Cannot find module &apos;/var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts&apos;" type="Error">
Error: Cannot find module &apos;/var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts&apos;
⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: &apos;ERR_MODULE_NOT_FOUND&apos; }
Caused by: Error: Failed to load url /var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts (resolved id: /var/tmp/vibe-kanban/worktrees/vk-b25b-create-tes/apps/web/tests/setup/vitest.setup.ts). Does the file exist?
 ❯ loadAndTransform ../../node_modules/.pnpm/vite@7.1.4_@types+node@20.19.11_sass@1.90.0/node_modules/vite/dist/node/chunks/dep-C6pp_iVS.js:26400:33
            </failure>
        </testcase>
    </testsuite>
</testsuites>
